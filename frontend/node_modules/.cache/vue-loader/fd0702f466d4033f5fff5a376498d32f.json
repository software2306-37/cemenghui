{"remainingRequest":"D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\src\\views\\Login.vue","mtime":1750607693225},{"path":"D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1750527325917},{"path":"D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1750527325076},{"path":"D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1750527325628},{"path":"D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1750527324930},{"path":"D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1750527325038}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9naW4tY29udGFpbmVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGhlaWdodDogMTAwdmg7DQogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2JrLnBuZyIpOw0KICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOw0KfQ0KDQoubG9naW4tYm94IHsNCiAgd2lkdGg6IDQwMHB4Ow0KICBwYWRkaW5nOiA0MHB4Ow0KICBiYWNrZ3JvdW5kOiB3aGl0ZTsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCiAgYm94LXNoYWRvdzogMCAxNXB4IDM1cHggcmdiYSgwLCAwLCAwLCAwLjEpOw0KfQ0KDQoubG9naW4tYm94IGgyIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KICBjb2xvcjogIzMzMzsNCiAgZm9udC1zaXplOiAyNHB4Ow0KfQ0KDQoubG9naW4tZm9ybSB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQp9DQoNCi5yZWdpc3Rlci1saW5rIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KICBjb2xvcjogIzY2NjsNCn0NCg0KLmNhcHRjaGEtY29udGFpbmVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgd2lkdGg6IDEwMCU7DQp9DQoNCi5jYXB0Y2hhLWltYWdlIHsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBib3JkZXI6IDFweCBzb2xpZCAjZGNkZmU2Ow0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIGJhY2tncm91bmQ6ICNmZmY7DQogIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzOw0KfQ0KDQouY2FwdGNoYS1pbWFnZTpob3ZlciB7DQogIGJvcmRlci1jb2xvcjogIzQwOWVmZjsNCn0NCg0KLmNhcHRjaGEtaW1hZ2UgY2FudmFzIHsNCiAgZGlzcGxheTogYmxvY2s7DQogIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLmxvZ2luLW9wdGlvbnMgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG1hcmdpbi1ib3R0b206IDE1cHg7DQp9DQoNCi5mb3Jnb3QtcGFzc3dvcmQtYnRuIHsNCiAgbWFyZ2luLWxlZnQ6IDE1MHB4Ow0KICBwYWRkaW5nOiAwOw0KICBmb250LXNpemU6IDE0cHg7DQogIGNvbG9yOiAjNDA5ZWZmOw0KfQ0KDQouZm9yZ290LXBhc3N3b3JkLWJ0bjpob3ZlciB7DQogIGNvbG9yOiAjNjZiMWZmOw0KfQ0KDQouc3VjY2Vzcy1tZXNzYWdlIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBwYWRkaW5nOiAyMHB4IDA7DQp9DQoNCi5zdWNjZXNzLW1lc3NhZ2UgaDMgew0KICBtYXJnaW46IDE2cHggMCA4cHggMDsNCiAgY29sb3I6ICM2N2MyM2E7DQogIGZvbnQtc2l6ZTogMThweDsNCn0NCg0KLnN1Y2Nlc3MtbWVzc2FnZSBwIHsNCiAgbWFyZ2luOiAwOw0KICBjb2xvcjogIzYwNjI2NjsNCiAgZm9udC1zaXplOiAxNHB4Ow0KfQ0K"},{"version":3,"sources":["D:\\Program Files (x86)\\ys\\project\\springboot\\测盟汇系统\\frontend\\src\\views\\Login.vue"],"names":[],"mappings":"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;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AACjB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB","file":"D:/Program Files (x86)/ys/project/springboot/测盟汇系统/frontend/src/views/Login.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <h2>测盟汇管理系统</h2>\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginFormRef\" class=\"login-form\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            placeholder=\"请输入用户名\"\r\n            prefix-icon=\"User\"\r\n            size=\"large\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            prefix-icon=\"Lock\"\r\n            size=\"large\"\r\n            @keyup.enter=\"handleLogin\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        <el-form-item prop=\"captcha\">\r\n          <div class=\"captcha-container\">\r\n            <el-input\r\n              v-model=\"loginForm.captcha\"\r\n              placeholder=\"请输入验证码\"\r\n              size=\"large\"\r\n              style=\"flex: 1; margin-right: 10px;\"\r\n              @keyup.enter=\"handleLogin\"\r\n            />\r\n            <div class=\"captcha-image\" @click=\"refreshCaptcha\">\r\n              <canvas ref=\"captchaCanvas\" width=\"120\" height=\"40\"></canvas>\r\n            </div>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <div class=\"login-options\">\r\n            <el-checkbox v-model=\"rememberPassword\">记住密码</el-checkbox>\r\n            <el-button type=\"text\" @click=\"showForgotPassword = true\" class=\"forgot-password-btn\">忘记密码？</el-button>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            style=\"width: 100%\"\r\n            :loading=\"loading\"\r\n            @click=\"handleLogin\"\r\n          >\r\n            登录\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"register-link\">\r\n        <span>还没有账号？</span>\r\n        <el-button type=\"text\" @click=\"showRegister = true\">立即注册</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 注册对话框 -->\r\n    <el-dialog v-model=\"showRegister\" title=\"用户注册\" width=\"450px\">\r\n      <el-form :model=\"registerForm\" :rules=\"registerRules\" ref=\"registerFormRef\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"registerForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"registerForm.password\" type=\"password\" show-password />\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input v-model=\"registerForm.confirmPassword\" type=\"password\" show-password />\r\n        </el-form-item>\r\n        <el-form-item label=\"企业名称\" prop=\"companyName\">\r\n          <el-input v-model=\"registerForm.companyName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"registerForm.phone\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"registerForm.email\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"验证码\" prop=\"captcha\">\r\n          <div class=\"captcha-container\">\r\n            <el-input\r\n              v-model=\"registerForm.captcha\"\r\n              placeholder=\"请输入验证码\"\r\n              style=\"flex: 1; margin-right: 10px;\"\r\n            />\r\n            <div class=\"captcha-image\" @click=\"refreshRegisterCaptcha\">\r\n              <canvas ref=\"registerCaptchaCanvas\" width=\"120\" height=\"40\"></canvas>\r\n            </div>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"showRegister = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleRegister\" :loading=\"registerLoading\">注册</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 找回密码对话框 -->\r\n    <el-dialog v-model=\"showForgotPassword\" title=\"找回密码\" width=\"450px\">\r\n      <el-steps :active=\"forgotPasswordStep\" finish-status=\"success\" style=\"margin-bottom: 30px;\">\r\n        <el-step title=\"验证身份\" />\r\n        <el-step title=\"设置新密码\" />\r\n        <el-step title=\"完成\" />\r\n      </el-steps>\r\n\r\n      <!-- 第一步：验证身份 -->\r\n      <el-form \r\n        v-if=\"forgotPasswordStep === 0\" \r\n        :model=\"forgotPasswordForm\" \r\n        :rules=\"forgotPasswordRules\" \r\n        ref=\"forgotPasswordFormRef\" \r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"forgotPasswordForm.username\" placeholder=\"请输入用户名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"forgotPasswordForm.email\" placeholder=\"请输入注册时的邮箱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"验证码\" prop=\"captcha\">\r\n          <div class=\"captcha-container\">\r\n            <el-input\r\n              v-model=\"forgotPasswordForm.captcha\"\r\n              placeholder=\"请输入验证码\"\r\n              style=\"flex: 1; margin-right: 10px;\"\r\n            />\r\n            <div class=\"captcha-image\" @click=\"refreshForgotPasswordCaptcha\">\r\n              <canvas ref=\"forgotPasswordCaptchaCanvas\" width=\"120\" height=\"40\"></canvas>\r\n            </div>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 第二步：设置新密码 -->\r\n      <el-form \r\n        v-if=\"forgotPasswordStep === 1\" \r\n        :model=\"resetPasswordForm\" \r\n        :rules=\"resetPasswordRules\" \r\n        ref=\"resetPasswordFormRef\" \r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input v-model=\"resetPasswordForm.newPassword\" type=\"password\" show-password placeholder=\"请输入新密码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input v-model=\"resetPasswordForm.confirmPassword\" type=\"password\" show-password placeholder=\"请再次输入新密码\" />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 第三步：完成 -->\r\n      <div v-if=\"forgotPasswordStep === 2\" class=\"success-message\">\r\n        <el-icon size=\"48\" color=\"#67c23a\" style=\"margin-bottom: 16px;\">\r\n          <CircleCheck />\r\n        </el-icon>\r\n        <h3>密码重置成功！</h3>\r\n        <p>您的密码已成功重置，请使用新密码登录。</p>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <el-button @click=\"closeForgotPasswordDialog\">取消</el-button>\r\n        <el-button \r\n          v-if=\"forgotPasswordStep < 2\" \r\n          type=\"primary\" \r\n          @click=\"handleForgotPasswordNext\" \r\n          :loading=\"forgotPasswordLoading\"\r\n        >\r\n          {{ forgotPasswordStep === 0 ? '验证身份' : '重置密码' }}\r\n        </el-button>\r\n        <el-button \r\n          v-if=\"forgotPasswordStep === 2\" \r\n          type=\"primary\" \r\n          @click=\"closeForgotPasswordDialog\"\r\n        >\r\n          完成\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, nextTick } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { CircleCheck } from '@element-plus/icons-vue'\r\nimport request from '../utils/request'\r\n\r\nconst router = useRouter()\r\n\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  captcha: ''\r\n})\r\n\r\nconst registerForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  companyName: '',\r\n  phone: '',\r\n  email: '',\r\n  captcha: ''\r\n})\r\n\r\nconst forgotPasswordForm = reactive({\r\n  username: '',\r\n  email: '',\r\n  captcha: ''\r\n})\r\n\r\nconst resetPasswordForm = reactive({\r\n  newPassword: '',\r\n  confirmPassword: ''\r\n})\r\n\r\nconst rules = {\r\n  username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n  password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\r\n  captcha: [{ required: true, message: '请输入验证码', trigger: 'blur' }]\r\n}\r\n\r\nconst registerRules = {\r\n  username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' },\r\n    { min: 6, message: '密码长度不能少于6位', trigger: 'blur' }\r\n  ],\r\n  confirmPassword: [\r\n    { required: true, message: '请确认密码', trigger: 'blur' },\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        if (value !== registerForm.password) {\r\n          callback(new Error('两次输入密码不一致'))\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  companyName: [{ required: true, message: '请输入企业名称', trigger: 'blur' }],\r\n  phone: [\r\n    { required: true, message: '请输入手机号', trigger: 'blur' },\r\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号格式', trigger: 'blur' }\r\n  ],\r\n  email: [\r\n    { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n    { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\r\n  ],\r\n  captcha: [{ required: true, message: '请输入验证码', trigger: 'blur' }]\r\n}\r\n\r\nconst forgotPasswordRules = {\r\n  username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n  email: [\r\n    { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n    { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\r\n  ],\r\n  captcha: [{ required: true, message: '请输入验证码', trigger: 'blur' }]\r\n}\r\n\r\nconst resetPasswordRules = {\r\n  newPassword: [\r\n    { required: true, message: '请输入新密码', trigger: 'blur' },\r\n    { min: 6, message: '密码长度不能少于6位', trigger: 'blur' }\r\n  ],\r\n  confirmPassword: [\r\n    { required: true, message: '请确认密码', trigger: 'blur' },\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        if (value !== resetPasswordForm.newPassword) {\r\n          callback(new Error('两次输入密码不一致'))\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      trigger: 'blur'\r\n    }\r\n  ]\r\n}\r\n\r\nconst loading = ref(false)\r\nconst registerLoading = ref(false)\r\nconst forgotPasswordLoading = ref(false)\r\nconst showRegister = ref(false)\r\nconst showForgotPassword = ref(false)\r\nconst forgotPasswordStep = ref(0)\r\nconst rememberPassword = ref(false)\r\nconst loginFormRef = ref()\r\nconst registerFormRef = ref()\r\nconst forgotPasswordFormRef = ref()\r\nconst resetPasswordFormRef = ref()\r\nconst captchaCanvas = ref()\r\nconst registerCaptchaCanvas = ref()\r\nconst forgotPasswordCaptchaCanvas = ref()\r\n\r\n// 验证码相关\r\nconst captchaCode = ref('')\r\nconst registerCaptchaCode = ref('')\r\nconst forgotPasswordCaptchaCode = ref('')\r\n\r\n// 生成随机验证码\r\nconst generateCaptcha = () => {\r\n  const chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678'\r\n  let result = ''\r\n  for (let i = 0; i < 4; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length))\r\n  }\r\n  return result\r\n}\r\n\r\n// 绘制验证码\r\nconst drawCaptcha = (canvas, code) => {\r\n  if (!canvas) return\r\n  \r\n  const ctx = canvas.getContext('2d')\r\n  const width = canvas.width\r\n  const height = canvas.height\r\n  \r\n  // 清空画布\r\n  ctx.clearRect(0, 0, width, height)\r\n  \r\n  // 设置背景\r\n  ctx.fillStyle = '#f5f5f5'\r\n  ctx.fillRect(0, 0, width, height)\r\n  \r\n  // 绘制干扰线\r\n  for (let i = 0; i < 3; i++) {\r\n    ctx.strokeStyle = `hsl(${Math.random() * 360}, 50%, 50%)`\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath()\r\n    ctx.moveTo(Math.random() * width, Math.random() * height)\r\n    ctx.lineTo(Math.random() * width, Math.random() * height)\r\n    ctx.stroke()\r\n  }\r\n  \r\n  // 绘制验证码文字\r\n  const fontSize = 24\r\n  ctx.font = `${fontSize}px Arial`\r\n  ctx.textAlign = 'center'\r\n  ctx.textBaseline = 'middle'\r\n  \r\n  for (let i = 0; i < code.length; i++) {\r\n    const x = (width / code.length) * i + (width / code.length) / 2\r\n    const y = height / 2 + (Math.random() - 0.5) * 10\r\n    const angle = (Math.random() - 0.5) * 0.3\r\n    \r\n    ctx.save()\r\n    ctx.translate(x, y)\r\n    ctx.rotate(angle)\r\n    ctx.fillStyle = `hsl(${Math.random() * 360}, 70%, 40%)`\r\n    ctx.fillText(code[i], 0, 0)\r\n    ctx.restore()\r\n  }\r\n  \r\n  // 绘制干扰点\r\n  for (let i = 0; i < 20; i++) {\r\n    ctx.fillStyle = `hsl(${Math.random() * 360}, 50%, 50%)`\r\n    ctx.beginPath()\r\n    ctx.arc(Math.random() * width, Math.random() * height, 1, 0, 2 * Math.PI)\r\n    ctx.fill()\r\n  }\r\n}\r\n\r\n// 刷新登录验证码\r\nconst refreshCaptcha = () => {\r\n  captchaCode.value = generateCaptcha()\r\n  nextTick(() => {\r\n    drawCaptcha(captchaCanvas.value, captchaCode.value)\r\n  })\r\n}\r\n\r\n// 刷新注册验证码\r\nconst refreshRegisterCaptcha = () => {\r\n  registerCaptchaCode.value = generateCaptcha()\r\n  nextTick(() => {\r\n    drawCaptcha(registerCaptchaCanvas.value, registerCaptchaCode.value)\r\n  })\r\n}\r\n\r\n// 刷新找回密码验证码\r\nconst refreshForgotPasswordCaptcha = () => {\r\n  forgotPasswordCaptchaCode.value = generateCaptcha()\r\n  nextTick(() => {\r\n    drawCaptcha(forgotPasswordCaptchaCanvas.value, forgotPasswordCaptchaCode.value)\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  // 读取记住的用户名和密码\r\n  const savedUsername = localStorage.getItem('savedUsername')\r\n  const savedPassword = localStorage.getItem('savedPassword')\r\n  if (savedUsername && savedPassword) {\r\n    loginForm.username = savedUsername\r\n    loginForm.password = savedPassword\r\n    rememberPassword.value = true\r\n  }\r\n  \r\n  // 初始化验证码\r\n  refreshCaptcha()\r\n})\r\n\r\nconst handleLogin = async () => {\r\n  if (!loginFormRef.value) return\r\n  \r\n  await loginFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      // 验证码校验\r\n      if (loginForm.captcha.toLowerCase() !== captchaCode.value.toLowerCase()) {\r\n        ElMessage.error('验证码错误')\r\n        refreshCaptcha()\r\n        loginForm.captcha = ''\r\n        return\r\n      }\r\n      \r\n      loading.value = true\r\n      try {\r\n        const res = await request.post('/user/login', loginForm)\r\n        localStorage.setItem('user', JSON.stringify(res.data))\r\n        \r\n        // 处理记住密码\r\n        if (rememberPassword.value) {\r\n          localStorage.setItem('savedUsername', loginForm.username)\r\n          localStorage.setItem('savedPassword', loginForm.password)\r\n        } else {\r\n          localStorage.removeItem('savedUsername')\r\n          localStorage.removeItem('savedPassword')\r\n        }\r\n        \r\n        ElMessage.success('登录成功')\r\n        router.push('/')\r\n      } catch (error) {\r\n        console.error('登录失败:', error)\r\n        refreshCaptcha()\r\n        loginForm.captcha = ''\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nconst handleRegister = async () => {\r\n  if (!registerFormRef.value) return\r\n  \r\n  await registerFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      // 验证码校验\r\n      if (registerForm.captcha.toLowerCase() !== registerCaptchaCode.value.toLowerCase()) {\r\n        ElMessage.error('验证码错误')\r\n        refreshRegisterCaptcha()\r\n        registerForm.captcha = ''\r\n        return\r\n      }\r\n      \r\n      registerLoading.value = true\r\n      try {\r\n        await request.post('/user/register', registerForm)\r\n        ElMessage.success('注册成功，请登录')\r\n        showRegister.value = false\r\n        // 清空注册表单\r\n        Object.keys(registerForm).forEach(key => {\r\n          registerForm[key] = ''\r\n        })\r\n      } catch (error) {\r\n        console.error('注册失败:', error)\r\n        refreshRegisterCaptcha()\r\n        registerForm.captcha = ''\r\n      } finally {\r\n        registerLoading.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 监听注册对话框显示状态\r\nconst handleRegisterDialogOpen = () => {\r\n  nextTick(() => {\r\n    refreshRegisterCaptcha()\r\n  })\r\n}\r\n\r\n// 找回密码相关方法\r\nconst handleForgotPasswordNext = async () => {\r\n  if (forgotPasswordStep.value === 0) {\r\n    // 第一步：验证身份\r\n    if (!forgotPasswordFormRef.value) return\r\n    \r\n    await forgotPasswordFormRef.value.validate(async (valid) => {\r\n      if (valid) {\r\n        // 验证码校验\r\n        if (forgotPasswordForm.captcha.toLowerCase() !== forgotPasswordCaptchaCode.value.toLowerCase()) {\r\n          ElMessage.error('验证码错误')\r\n          refreshForgotPasswordCaptcha()\r\n          forgotPasswordForm.captcha = ''\r\n          return\r\n        }\r\n        \r\n        forgotPasswordLoading.value = true\r\n        try {\r\n          // 验证用户名和邮箱是否匹配\r\n          await request.post('/user/verify-identity', {\r\n            username: forgotPasswordForm.username,\r\n            email: forgotPasswordForm.email\r\n          })\r\n          \r\n          ElMessage.success('身份验证成功')\r\n          forgotPasswordStep.value = 1\r\n        } catch (error) {\r\n          console.error('身份验证失败:', error)\r\n          refreshForgotPasswordCaptcha()\r\n          forgotPasswordForm.captcha = ''\r\n        } finally {\r\n          forgotPasswordLoading.value = false\r\n        }\r\n      }\r\n    })\r\n  } else if (forgotPasswordStep.value === 1) {\r\n    // 第二步：重置密码\r\n    if (!resetPasswordFormRef.value) return\r\n    \r\n    await resetPasswordFormRef.value.validate(async (valid) => {\r\n      if (valid) {\r\n        forgotPasswordLoading.value = true\r\n        try {\r\n          await request.post('/user/reset-password', {\r\n            username: forgotPasswordForm.username,\r\n            email: forgotPasswordForm.email,\r\n            newPassword: resetPasswordForm.newPassword\r\n          })\r\n          \r\n          ElMessage.success('密码重置成功')\r\n          forgotPasswordStep.value = 2\r\n        } catch (error) {\r\n          console.error('密码重置失败:', error)\r\n        } finally {\r\n          forgotPasswordLoading.value = false\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst closeForgotPasswordDialog = () => {\r\n  showForgotPassword.value = false\r\n  forgotPasswordStep.value = 0\r\n  \r\n  // 清空表单数据\r\n  Object.keys(forgotPasswordForm).forEach(key => {\r\n    forgotPasswordForm[key] = ''\r\n  })\r\n  Object.keys(resetPasswordForm).forEach(key => {\r\n    resetPasswordForm[key] = ''\r\n  })\r\n  \r\n  // 清空表单验证状态\r\n  nextTick(() => {\r\n    if (forgotPasswordFormRef.value) {\r\n      forgotPasswordFormRef.value.clearValidate()\r\n    }\r\n    if (resetPasswordFormRef.value) {\r\n      resetPasswordFormRef.value.clearValidate()\r\n    }\r\n  })\r\n}\r\n\r\n// 监听showRegister变化\r\nimport { watch } from 'vue'\r\nwatch(showRegister, (newVal) => {\r\n  if (newVal) {\r\n    handleRegisterDialogOpen()\r\n  }\r\n})\r\n\r\n// 监听showForgotPassword变化\r\nwatch(showForgotPassword, (newVal) => {\r\n  if (newVal) {\r\n    nextTick(() => {\r\n      refreshForgotPasswordCaptcha()\r\n    })\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-image: url(\"../img/bk.png\");\r\n  background-size: cover;\r\n}\r\n\r\n.login-box {\r\n  width: 400px;\r\n  padding: 40px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-box h2 {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  font-size: 24px;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.register-link {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #666;\r\n}\r\n\r\n.captcha-container {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.captcha-image {\r\n  cursor: pointer;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  background: #fff;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.captcha-image:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.captcha-image canvas {\r\n  display: block;\r\n  border-radius: 4px;\r\n}\r\n\r\n.login-options {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.forgot-password-btn {\r\n  margin-left: 150px;\r\n  padding: 0;\r\n  font-size: 14px;\r\n  color: #409eff;\r\n}\r\n\r\n.forgot-password-btn:hover {\r\n  color: #66b1ff;\r\n}\r\n\r\n.success-message {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n}\r\n\r\n.success-message h3 {\r\n  margin: 16px 0 8px 0;\r\n  color: #67c23a;\r\n  font-size: 18px;\r\n}\r\n\r\n.success-message p {\r\n  margin: 0;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n</style> "]}]}