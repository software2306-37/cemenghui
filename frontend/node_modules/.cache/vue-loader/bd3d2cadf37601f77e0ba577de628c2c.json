{"remainingRequest":"E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\src\\views\\Profile.vue?vue&type=style&index=0&id=ced23842&scoped=true&lang=css","dependencies":[{"path":"E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\src\\views\\Profile.vue","mtime":1752137225629},{"path":"E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1752137215822},{"path":"E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1752137225080},{"path":"E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1752137223127},{"path":"E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752137215170},{"path":"E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1752137225072}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoJLnVzZXItaW5mbyB7DQoJICB0ZXh0LWFsaWduOiBjZW50ZXI7DQoJICBwYWRkaW5nOiAyMHB4Ow0KCX0NCgkNCgkudXNlci1pbmZvIGgzIHsNCgkgIG1hcmdpbjogMTVweCAwIDVweCAwOw0KCSAgY29sb3I6ICMzMzM7DQoJfQ0KCQ0KCS51c2VyLWluZm8gcCB7DQoJICBtYXJnaW46IDVweCAwOw0KCSAgY29sb3I6ICM2NjY7DQoJfQ0KCQ0KCS5hdmF0YXItdXBsb2FkZXIgew0KCSAgbWFyZ2luOiAxMHB4IDA7DQoJfQ0K"},{"version":3,"sources":["E:\\Idea works\\GithubUploadFild\\cemenghui\\frontend\\cemenghui\\frontend\\src\\views\\Profile.vue"],"names":[],"mappings":";CAgPC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;GACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACf;;CAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;GACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;GACpB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACb;;CAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;GACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;GACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACb;;CAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;GACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;CAChB","file":"E:/Idea works/GithubUploadFild/cemenghui/frontend/cemenghui/frontend/src/views/Profile.vue","sourceRoot":"","sourcesContent":["<template>\r\n\t<div class=\"profile\">\r\n\t    <el-row :gutter=\"20\">\r\n\t      <el-col :span=\"8\">\r\n\t        <el-card>\r\n\t          <template #header>\r\n\t            <span>个人信息</span>\r\n\t          </template>\r\n\t          <div class=\"user-info\">\r\n\t            <el-avatar :size=\"80\" :src=\"getImageUrl(user.avatar)\">\r\n\t              {{ user.nickname || user.username }}\r\n\t            </el-avatar>\r\n\t            <el-upload\r\n\t              class=\"avatar-uploader\"\r\n\t              :action=\"uploadUrl\"\r\n\t              :show-file-list=\"false\"\r\n\t              :on-success=\"handleAvatarSuccess\"\r\n\t              :before-upload=\"beforeAvatarUpload\"\r\n\t            >\r\n\t              <el-button size=\"small\" type=\"text\">更换头像</el-button>\r\n\t            </el-upload>\r\n\t            <h3>{{ user.nickname || user.username }}</h3>\r\n\t            <p>{{ user.role === 'ADMIN' ? '超级管理员' : '企业用户' }}</p>\r\n\t            <p>{{ user.companyName }}</p>\r\n\t            <p>注册时间：{{ user.createTime }}</p>\r\n\t          </div>\r\n\t        </el-card>\r\n\t      </el-col>\r\n\t      \r\n\t      <el-col :span=\"16\">\r\n\t        <el-card>\r\n\t          <template #header>\r\n\t            <span>修改资料</span>\r\n\t          </template>\r\n\t          <el-form :model=\"profileForm\" ref=\"profileFormRef\" label-width=\"100px\">\r\n\t            <el-form-item label=\"用户名\">\r\n\t              <el-input v-model=\"profileForm.username\" disabled />\r\n\t            </el-form-item>\r\n\t            <el-form-item label=\"昵称\">\r\n\t              <el-input v-model=\"profileForm.nickname\" placeholder=\"请输入昵称\" />\r\n\t            </el-form-item>\r\n\t            <el-form-item label=\"手机号\">\r\n\t              <el-input v-model=\"profileForm.phone\" />\r\n\t            </el-form-item>\r\n\t            <el-form-item label=\"邮箱\">\r\n\t              <el-input v-model=\"profileForm.email\" />\r\n\t            </el-form-item>\r\n\t            <el-form-item label=\"性别\">\r\n\t              <el-select v-model=\"profileForm.gender\" style=\"width: 200px\">\r\n\t                <el-option label=\"未知\" :value=\"0\" />\r\n\t                <el-option label=\"男\" :value=\"1\" />\r\n\t                <el-option label=\"女\" :value=\"2\" />\r\n\t              </el-select>\r\n\t            </el-form-item>\r\n\t            <el-form-item label=\"企业名称\">\r\n\t              <el-input v-model=\"profileForm.companyName\" />\r\n\t            </el-form-item>\r\n\t            <el-form-item>\r\n\t              <el-button type=\"primary\" @click=\"updateProfile\" :loading=\"updating\">保存修改</el-button>\r\n\t            </el-form-item>\r\n\t          </el-form>\r\n\t        </el-card>\r\n\t\r\n\t        <el-card style=\"margin-top: 20px;\">\r\n\t          <template #header>\r\n\t            <span>修改密码</span>\r\n\t          </template>\r\n\t          <el-form :model=\"passwordForm\" ref=\"passwordFormRef\" label-width=\"100px\">\r\n\t            <el-form-item label=\"原密码\">\r\n\t              <el-input v-model=\"passwordForm.oldPassword\" type=\"password\" show-password />\r\n\t            </el-form-item>\r\n\t            <el-form-item label=\"新密码\">\r\n\t              <el-input v-model=\"passwordForm.newPassword\" type=\"password\" show-password />\r\n\t            </el-form-item>\r\n\t            <el-form-item label=\"确认密码\">\r\n\t              <el-input v-model=\"passwordForm.confirmPassword\" type=\"password\" show-password />\r\n\t            </el-form-item>\r\n\t            <el-form-item>\r\n\t              <el-button type=\"primary\" @click=\"changePassword\" :loading=\"changingPassword\">修改密码</el-button>\r\n\t            </el-form-item>\r\n\t          </el-form>\r\n\t        </el-card>\r\n\t      </el-col>\r\n\t    </el-row>\r\n\t  </div>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, reactive, onMounted } from 'vue'\r\n\timport { ElMessage } from 'element-plus'\r\n\timport request from '../utils/request'\r\n\timport router from \"@/router\";\r\n\t\r\n\tconst user = ref({})\r\n\tconst updating = ref(false)\r\n\tconst changingPassword = ref(false)\r\n\tconst uploadUrl = ref('/api/file/upload')\r\n\t\r\n\tconst profileForm = reactive({\r\n\t  username: '',\r\n\t  nickname: '',\r\n\t  phone: '',\r\n\t  email: '',\r\n\t  gender: 0,\r\n\t  companyName: ''\r\n\t})\r\n\t\r\n\tconst passwordForm = reactive({\r\n\t  oldPassword: '',\r\n\t  newPassword: '',\r\n\t  confirmPassword: ''\r\n\t})\r\n\t\r\n\tconst profileFormRef = ref()\r\n\tconst passwordFormRef = ref()\r\n\t\r\n\tonMounted(() => {\r\n\t  loadUserInfo()\r\n\t})\r\n\t\r\n\tconst loadUserInfo = async () => {\r\n\t  try {\r\n\t    // 优先从服务器获取最新用户信息\r\n\t    const userRes = await request.get('/user/current')\r\n\t    if (userRes.code === 200) {\r\n\t      user.value = userRes.data\r\n\t      localStorage.setItem('user', JSON.stringify(userRes.data))\r\n\t      Object.assign(profileForm, userRes.data)\r\n\t    }\r\n\t  } catch (error) {\r\n\t    // 如果服务器请求失败，则从本地存储获取\r\n\t    console.error('获取用户信息失败，使用本地缓存:', error)\r\n\t    const userStr = localStorage.getItem('user')\r\n\t    if (userStr) {\r\n\t      user.value = JSON.parse(userStr)\r\n\t      Object.assign(profileForm, user.value)\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\tconst updateProfile = async () => {\r\n\t  updating.value = true\r\n\t  try {\r\n\t     await request.post('/user/profile', profileForm)\r\n\t    ElMessage.success('更新成功')\r\n\t    // 重新获取用户信息以确保数据同步\r\n\t    const userRes = await request.get('/user/current')\r\n\t    if (userRes.code === 200) {\r\n\t      user.value = userRes.data\r\n\t      localStorage.setItem('user', JSON.stringify(userRes.data))\r\n\t      Object.assign(profileForm, userRes.data)\r\n\t      // 触发全局事件通知其他组件更新用户信息\r\n\t      window.dispatchEvent(new CustomEvent('userUpdated', { detail: userRes.data }))\r\n\t    }\r\n\t  } catch (error) {\r\n\t    console.error('更新个人信息失败:', error)\r\n\t  } finally {\r\n\t    updating.value = false\r\n\t  }\r\n\t}\r\n\t\r\n\tconst changePassword = async () => {\r\n\t  if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n\t    ElMessage.error('两次输入的密码不一致')\r\n\t    return\r\n\t  }\r\n\t  \r\n\t  if (passwordForm.newPassword.length < 6) {\r\n\t    ElMessage.error('密码长度不能少于6位')\r\n\t    return\r\n\t  }\r\n\t\r\n\t  changingPassword.value = true\r\n\t  try {\r\n\t    await request.post('/user/changePassword', {\r\n\t      oldPassword: passwordForm.oldPassword,\r\n\t      newPassword: passwordForm.newPassword\r\n\t    })\r\n\t    ElMessage.success('密码修改成功')\r\n\t    // 清空密码表单\r\n\t    Object.assign(passwordForm, {\r\n\t      oldPassword: '',\r\n\t      newPassword: '',\r\n\t      confirmPassword: ''\r\n\t    })\r\n\t\tawait request.post('/user/logout')\r\n\t\t    localStorage.removeItem('user')\r\n\t\t    router.push('/login')\r\n\t  } catch (error) {\r\n\t    console.error('修改密码失败:', error)\r\n\t  } finally {\r\n\t    changingPassword.value = false\r\n\t  }\r\n\t}\r\n\t\r\n\tconst handleAvatarSuccess = async (response) => {\r\n\t  if (response.code === 200) {\r\n\t    // 更新头像\r\n\t    try {\r\n\t      await request.put('/user/profile', { avatar: response.data })\r\n\t      // 重新获取用户信息以确保数据同步\r\n\t      const userRes = await request.get('/user/current')\r\n\t      if (userRes.code === 200) {\r\n\t        user.value = userRes.data\r\n\t        localStorage.setItem('user', JSON.stringify(userRes.data))\r\n\t        // 触发全局事件通知其他组件更新用户信息\r\n\t        window.dispatchEvent(new CustomEvent('userUpdated', { detail: userRes.data }))\r\n\t      }\r\n\t      ElMessage.success('头像更新成功')\r\n\t    } catch (error) {\r\n\t      console.error('更新头像失败:', error)\r\n\t    }\r\n\t  } else {\r\n\t    ElMessage.error('头像上传失败')\r\n\t  }\r\n\t}\r\n\t\r\n\tconst beforeAvatarUpload = (file) => {\r\n\t  const isImage = file.type.indexOf('image/') === 0\r\n\t  const isLt2M = file.size / 1024 / 1024 < 2\r\n\t\r\n\t  if (!isImage) {\r\n\t    ElMessage.error('只能上传图片文件!')\r\n\t    return false\r\n\t  }\r\n\t  if (!isLt2M) {\r\n\t    ElMessage.error('图片大小不能超过 2MB!')\r\n\t    return false\r\n\t  }\r\n\t  return true\r\n\t}\r\n\t\r\n\tconst getImageUrl = (imagePath) => {\r\n\t  if (!imagePath) return ''\r\n\t  if (imagePath.startsWith('http')) return imagePath\r\n\t  return `http://localhost:8080/api${imagePath}`\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.user-info {\r\n\t  text-align: center;\r\n\t  padding: 20px;\r\n\t}\r\n\t\r\n\t.user-info h3 {\r\n\t  margin: 15px 0 5px 0;\r\n\t  color: #333;\r\n\t}\r\n\t\r\n\t.user-info p {\r\n\t  margin: 5px 0;\r\n\t  color: #666;\r\n\t}\r\n\t\r\n\t.avatar-uploader {\r\n\t  margin: 10px 0;\r\n\t}\r\n</style>"]}]}